// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	card "to-do-api/pg/domain/card"

	mock "github.com/stretchr/testify/mock"
)

// CardService is an autogenerated mock type for the CardService type
type CardService struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *CardService) Create(_a0 card.Card) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(card.Card) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *CardService) GetAll() (card.Card, error) {
	ret := _m.Called()

	var r0 card.Card
	var r1 error
	if rf, ok := ret.Get(0).(func() (card.Card, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() card.Card); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(card.Card)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCardService interface {
	mock.TestingT
	Cleanup(func())
}

// NewCardService creates a new instance of CardService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCardService(t mockConstructorTestingTNewCardService) *CardService {
	mock := &CardService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
